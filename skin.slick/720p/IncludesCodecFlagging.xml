<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<variable name="typehackflagging">
		<value condition="[substring(ListItem.FilenameAndPath,bluray) | substring(ListItem.FilenameAndPath,bdrip) | substring(ListItem.FilenameAndPath,bd25) | substring(ListItem.FilenameAndPath,bd50)]">bluray</value>
		<value condition="substring(ListItem.FilenameAndPath,hddvd)">hddvd</value>
		<value condition="substring(ListItem.FilenameAndPath,dvd)">dvd</value>
		<value condition="[substring(ListItem.FilenameAndPath,pdtv) | substring(ListItem.FilenameAndPath,hdtv) | substring(ListItem.FilenameAndPath,dsr)]">TV</value>
		<value condition="substring(ListItem.FilenameAndPath,vhs)">vhs</value>
	</variable>
	<variable name="videocodec">
		<value condition="[substring(ListItem.VideoCodec,div,left) | stringcompare(ListItem.VideoCodec,dx50)]">divx</value>
		<value>$INFO[ListItem.VideoCodec]</value>
	</variable>
	<include name="VideoCodecFlaggingConditions">
		<control type="image">
			<description>Video rez Image</description>
			<width>55</width>
			<height>35</height>
			<aspectratio align="right">keep</aspectratio>
			<texture>$INFO[ListItem.VideoResolution,flagging/video/,.png]</texture>
		</control>
		<control type="image">
			<description>Codec Image</description>
			<width>80</width>
			<height>35</height>
			<aspectratio align="left">keep</aspectratio>
			<texture>$VAR[videocodec,flagging/video/,.png]</texture>
		</control>
	</include>
	<include name="VideoExtrasFlaggingConditions">
		<control type="image">
			<description>Extra Info Flag</description>
			<width>55</width>
			<height>35</height>
			<aspectratio align="left">keep</aspectratio>
			<texture>$VAR[ExtraInfoFlag]</texture>
			<visible>Window.IsVisible(Videos) + [Container.Content(Movies) | Container.Content(Episodes) | Container.Content(MusicVideos)]</visible>
		</control>
	</include>
	<include name="VideoTypeHackFlaggingConditions">
		<control type="image">
			<description>Video Type Image</description>
			<width>80</width>
			<height>35</height>
			<aspectratio align="left">keep</aspectratio>
			<texture>$VAR[typehackflagging,flagging/video/,.png]</texture>
			<visible>!Skin.HasSetting(HideFilenameFlagging)</visible>
		</control>
	</include>
	<include name="VideoMPAAFlaggingConditions">
		<control type="image">
			<description>Rating image</description>
			<width>80</width>
			<height>35</height>
			<aspectratio>keep</aspectratio>
			<texture>$VAR[RatingMPAA,flagging/ratings/,.png]</texture>
			<visible>!IsEmpty(ListItem.Mpaa) + Skin.String(MPAACertificate)</visible>
		</control>
	</include>
	<include name="AudioCodecFlaggingConditions">
		<control type="image">
			<description>Audio Codec Image</description>
			<width>80</width>
			<height>35</height>
			<aspectratio align="right">keep</aspectratio>
			<texture>$INFO[ListItem.AudioCodec,flagging/audio/,.png]</texture>
		</control>
	</include>
	<include name="AudioChannelsFlaggingConditions">
		<control type="image">
			<description>Audio Codec Image</description>
			<width>55</width>
			<height>35</height>
			<aspectratio align="left">keep</aspectratio>
			<texture>$INFO[ListItem.AudioChannels,flagging/audio/,.png]</texture>
		</control>
	</include>
	<include name="AspectCodecFlaggingConditions">
		<control type="image">
			<description>Aspectratio Image</description>
			<width>55</width>
			<height>35</height>
			<aspectratio align="right">keep</aspectratio>
			<texture>$INFO[ListItem.VideoAspect,flagging/aspectratio/,.png]</texture>
		</control>
	</include>
</includes>